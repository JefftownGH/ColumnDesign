<Window x:Class="ColumnDesign.UI.ColumnCreatorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:vm="clr-namespace:ColumnDesign.ViewModel"
        mc:Ignorable="d"
        Title="ColumnCreator"
        Height="50"
        Width="750"
        MinHeight="560"
        MinWidth="750"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance vm:ColumnCreatorViewModel }">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="5" />
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <TabControl x:Name="Tabs">
        <TabItem>
            <TabItem.Header>
                <TextBlock Margin="3">Gates Columns</TextBlock>
            </TabItem.Header>
            <TabItem.Content>
                <DockPanel LastChildFill="True">
                    <Button x:Name="DrawGates" DockPanel.Dock="Bottom" Content="Create Gates Sheet!" Height="50" FontSize="28"
                            Command="{Binding DrawGatesCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="Border" Background="White" BorderBrush="Gray"
                                                    BorderThickness="1">
                                                <ContentPresenter 
                                                    HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError), ElementName=WidthX}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=LengthY}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=HeightZ}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError), ElementName=Quantity}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Visibility), ElementName=TxtPlyError}"
                                                            Value="Collapsed" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="Blue" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Border" Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel DockPanel.Dock="Left" 
                                Width="225" 
                                FocusManager.FocusedElement="{Binding ElementName=WidthX}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Foreground="Gray" Width="155" Text="Units in inches or ft'-in" />
                            <TextBlock Text="Window ?" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Width (X)</TextBlock>
                            <TextBox x:Name="WidthX" Width="100" TabIndex="0" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="WidthX" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="12" Max="48" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <CheckBox x:Name="WindowX" Margin="10,0,0,0"
                                      IsChecked="{Binding WindowX}"
                                      Checked="Window_OnChecked"
                                      Unchecked="Window_OnUnchecked" 
                                      Click="Window_Click">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError), ElementName=WidthX}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=LengthY}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=HeightZ}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=Quantity}"
                                                        Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Length (Y)</TextBlock>
                            <TextBox x:Name="LengthY" Width="100" TabIndex="1" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="LengthY" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="12" Max="48" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <CheckBox x:Name="WindowY" Margin="10,0,0,0"
                                      IsChecked="{Binding WindowY}"
                                      Checked="Window_OnChecked"
                                      Unchecked="Window_OnUnchecked"
                                      Click="Window_Click">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError), ElementName=WidthX}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=LengthY}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=HeightZ}"
                                                        Value="False" />
                                                    <Condition
                                                        Binding="{Binding Path=(Validation.HasError),  ElementName=Quantity}"
                                                        Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Height (Z)</TextBlock>
                            <TextBox x:Name="HeightZ" Width="100" TabIndex="2" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="HeightZ" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="96" Max="240" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Quantity</TextBlock>
                            <TextBox x:Name="Quantity" Width="100" TabIndex="3">
                                <TextBox.Text>
                                    <Binding Path="Quantity" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="1" Max="2147483647" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <TextBlock>Squaring Corners</TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <RadioButton x:Name="Regular">Regular</RadioButton>
                            <RadioButton x:Name="Picking" Margin="20,0,0,0" IsChecked="True">Picking</RadioButton>
                        </StackPanel>
                        <TextBlock>Plywood type</TextBlock>
                        <TextBox x:Name="PlywoodType" TabIndex="4" Text="{Binding PlywoodType, UpdateSourceTrigger=PropertyChanged}"
                                 Width="100" HorizontalAlignment="Left" />
                        <TextBlock>Clamp size</TextBlock>
                        <StackPanel>
                            <RadioButton x:Name="RbColumn824">8-24 Gates</RadioButton>
                            <RadioButton x:Name="RbColumn2436">24-36 Gates</RadioButton>
                            <RadioButton x:Name="RbColumn3648">36-48 Gates</RadioButton>
                            <RadioButton x:Name="RbColumnCustom" IsChecked="True">Choose by column size</RadioButton>
                        </StackPanel>
                        <TextBlock
                            x:Name="PlywoodError"
                            Visibility="{Binding PlywoodType, Converter={vm:CheckPlywoodVisibilityConverter}}"
                            Text="Check number of uses if not&#x0a;using HDO plywood!" HorizontalAlignment="Left"
                            Foreground="Red" />
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Right">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Sheet name</TextBlock>
                            <TextBox x:Name="SheetName" Width="200" TabIndex="6"
                                     Text="{Binding SheetName, UpdateSourceTrigger=PropertyChanged }" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Project title</TextBlock>
                            <TextBox x:Name="ProjectTitle" Width="200">Project title</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Project address</TextBlock>
                            <TextBox x:Name="ProjectAddress" Width="200">Project address</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Date</TextBlock>
                            <TextBox x:Name="Date" Width="200"
                                     Text="{Binding Date, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Sheet issued for...</TextBlock>
                            <ComboBox Width="200" x:Name="SheetIssuedFor">
                                <TextBlock Margin="0">PRELIMINARY</TextBlock>
                                <TextBlock Margin="0">SUBMITTAL REVIEW</TextBlock>
                                <TextBlock Margin="0">FOR CONSTRUCTION</TextBlock>
                                <TextBlock Margin="0">OTHER</TextBlock>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Scale</TextBlock>
                            <TextBox Width="200" IsReadOnly="True" Background="Gray">0.75</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Drawn by</TextBlock>
                            <TextBox x:Name="DrawnBy" Width="200">MCC</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Job #</TextBlock>
                            <TextBox x:Name="JobN" Width="200">999</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Sheet</TextBlock>
                            <TextBox x:Name="SheetNumber" Width="200">1.0.0</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Suffix</TextBlock>
                            <TextBox x:Name="Suffix" Width="200">A</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">McClone Area</TextBlock>
                            <ComboBox Width="200" SelectedIndex="2">
                                <TextBlock Margin="0">CO</TextBlock>
                                <TextBlock Margin="0">HI</TextBlock>
                                <TextBlock Margin="0">NCA</TextBlock>
                                <TextBlock Margin="0">SCA</TextBlock>
                                <TextBlock Margin="0">STX</TextBlock>
                                <TextBlock Margin="0">WA</TextBlock>
                                <TextBlock Margin="0">NCA</TextBlock>
                            </ComboBox>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button
                                Grid.Column="0"
                                Content="Save" />
                            <Button
                                Grid.Column="1"
                                Content="Load" />
                        </Grid>
                    </StackPanel>
                    <DockPanel LastChildFill="True">

                        <TextBox 
                            x:Name="BoxPlySeams" 
                                 DockPanel.Dock="Bottom" 
                            TabIndex="5"
                            Text="{Binding BoxPlySeams }"
                            TextChanged="BoxPlySeams_OnTextChanged"/>
                        <TextBlock
                            DockPanel.Dock="Bottom"
                            x:Name="TxtPlyError"
                            Visibility="Collapsed"
                            Text="Error" HorizontalAlignment="Left"
                            Foreground="Red" />
                        <Grid
                            x:Name="GridAxis"
                            DockPanel.Dock="Bottom"
                            Margin="10"
                            MouseLeftButtonDown="GridAxis_OnMouseLeftButtonDown">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="1" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="40" />
                            </Grid.ColumnDefinitions>
                            <Line Grid.Column="0" Grid.Row="0" Stretch="Fill" Y2="1" Stroke="Black" />
                            <Line Grid.Column="1" Grid.Row="1" Stretch="Fill" X2="1" Stroke="Black" />
                            <TextBlock
                                Grid.Column="1"
                                Grid.Row="0"
                                VerticalAlignment="Top"
                                Margin="2"
                                Text="Z" />
                            <TextBlock
                                Grid.Column="1"
                                Grid.Row="0"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Right"
                                Margin="2"
                                Text="{Binding SlblAxis}" />
                        </Grid>
                        <DockPanel
                            x:Name="PlyLinesPanel"
                            Margin="10"
                            LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError), ElementName=WidthX}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=LengthY}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=HeightZ}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=Quantity}"
                                                            Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <Grid
                                x:Name="GridWinDim"
                                DockPanel.Dock="Left">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.Visibility>
                                    <MultiBinding Converter="{vm:WinDimSeamsVisibilityConverter}">
                                        <Binding Path="WindowX" />
                                        <Binding Path="WindowY" />
                                    </MultiBinding>
                                </Grid.Visibility>
                                <TextBlock
                                    Grid.Row="1"
                                    x:Name="WinDim1"
                                    Foreground="Blue"
                                    Text="{Binding WinDim1, UpdateSourceTrigger=PropertyChanged}">                                   
                                </TextBlock>
                                <TextBlock
                                    Grid.Row="4"
                                    x:Name="WinDim2"
                                    Foreground="Blue"
                                    Text="{Binding WinDim2, UpdateSourceTrigger=PropertyChanged}">
                                </TextBlock>
                            </Grid>
                            <Grid>
                                <Rectangle
                                    Fill="Transparent"
                                    Stroke="Black" />
                            </Grid>
                        </DockPanel>
                    </DockPanel>
                </DockPanel>
            </TabItem.Content>
        </TabItem>
        <TabItem>
            <TabItem.Header>
                <TextBlock Margin="3">Scissor Clamp Columns</TextBlock>
            </TabItem.Header>
            <TabItem.Content>
                <DockPanel LastChildFill="True">
                    <Button DockPanel.Dock="Bottom" Content="Create Scissor Clamp Sheet!" Height="50" FontSize="28"
                            x:Name="DrawScissors"
                            Command="{Binding DrawScissorsCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="Border" Background="White" BorderBrush="Gray"
                                                    BorderThickness="1">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError), 
                                                        ElementName=SWidthX}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError), 
                                                        ElementName=SLengthY}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError), 
                                                        ElementName=SHeightZ}"
                                                            Value="False" />
                                                        <Condition
                                                            Binding="{Binding Path=(Validation.HasError),
                                                        ElementName=SQuantity}"
                                                            Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="True" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Setter TargetName="Border" Property="Background" Value="Blue" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Border" Property="Background" Value="White" />
                                                    <Setter Property="Foreground" Value="Gray" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel DockPanel.Dock="Left" Width="225">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Foreground="Gray" Width="155" Text="Units in inches or ft'-in" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Width (X)</TextBlock>
                            <TextBox x:Name="SWidthX" Width="100" TabIndex="0" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="SWidthX" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="8" Max="46" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Length (Y)</TextBlock>
                            <TextBox x:Name="SLengthY" Width="100" TabIndex="1" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="SLengthY" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="8" Max="46" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Height (Z)</TextBlock>
                            <TextBox x:Name="SHeightZ" Width="100" TabIndex="2" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="SHeightZ" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="12" Max="480" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="60">Quantity</TextBlock>
                            <TextBox x:Name="SQuantity" Width="100" TabIndex="3">
                                <TextBox.Text>
                                    <Binding Path="SQuantity" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <vm:ValueRangeRule Min="1" Max="2147483647" ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Height="53">
                            <TextBlock VerticalAlignment="Bottom">Maximum height<LineBreak />w/ full liquid head:</TextBlock>
                            <TextBlock x:Name="SMaxHeight" VerticalAlignment="Bottom">N/A</TextBlock>
                        </StackPanel>
                        <TextBlock>Plywood type</TextBlock>
                        <TextBox x:Name="SPlywoodType" TabIndex="4" Text="HDO" Width="100" HorizontalAlignment="Left" />
                        <TextBlock>Clamp size</TextBlock>
                        <StackPanel>
                            <RadioButton x:Name="Clampsize1">36" Scissor clamp</RadioButton>
                            <RadioButton x:Name="Clampsize2">48" Scissor clamp</RadioButton>
                            <RadioButton x:Name="Clampsize3">60" Scissor clamp</RadioButton>
                            <RadioButton x:Name="ClampSizeChoose" IsChecked="True">Choose by column size</RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel DockPanel.Dock="Right">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Sheet name</TextBlock>
                            <TextBox x:Name="SSheetName" Width="200" TabIndex="6"
                                     Text="{Binding SSheetName, UpdateSourceTrigger=PropertyChanged }" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Project title</TextBlock>
                            <TextBox x:Name="SProjectTitle" Width="200">Project title</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Project address</TextBlock>
                            <TextBox x:Name="SProjectAddress" Width="200">Project address</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Date</TextBlock>
                            <TextBox x:Name="SDate" Width="200">12/03/20</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock>Sheet issued for...</TextBlock>
                            <ComboBox Width="200" x:Name="SSheetIssuedFor">
                                <TextBlock Margin="0">PRELIMINARY</TextBlock>
                                <TextBlock Margin="0">SUBMITTAL REVIEW</TextBlock>
                                <TextBlock Margin="0">FOR CONSTRUCTION</TextBlock>
                                <TextBlock Margin="0">OTHER</TextBlock>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Scale</TextBlock>
                            <TextBox Width="200" IsReadOnly="True" Background="Gray">0.75</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Drawn by</TextBlock>
                            <TextBox x:Name="SDrawnBy" Width="200">MCC</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Job #</TextBlock>
                            <TextBox x:Name="SJobN" Width="200">999</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Sheet</TextBlock>
                            <TextBox x:Name="SSheetNumber" Width="200">1.0.0</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">Suffix</TextBlock>
                            <TextBox x:Name="SSuffix" Width="200">A</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="100">McClone Area</TextBlock>
                            <ComboBox Width="200" SelectedIndex="2">
                                <TextBlock Margin="0">CO</TextBlock>
                                <TextBlock Margin="0">HI</TextBlock>
                                <TextBlock Margin="0">NCA</TextBlock>
                                <TextBlock Margin="0">SCA</TextBlock>
                                <TextBlock Margin="0">STX</TextBlock>
                                <TextBlock Margin="0">WA</TextBlock>
                                <TextBlock Margin="0">NCA</TextBlock>
                            </ComboBox>
                        </StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button
                                Grid.Column="0"
                                Content="Save" />
                            <Button
                                Grid.Column="1"
                                Content="Load" />
                        </Grid>
                    </StackPanel>
                    <DockPanel LastChildFill="True">

                        <TextBox 
                            x:Name="SBoxPlySeams" 
                            TabIndex="5"
                                 DockPanel.Dock="Bottom" 
                            Text="{Binding SBoxPlySeams }"
                            TextChanged="SBoxPlySeams_OnTextChanged"/>
                        <TextBlock
                            DockPanel.Dock="Bottom"
                            x:Name="STxtPlyError"
                            Visibility="Collapsed"
                            Text="Error" HorizontalAlignment="Left"
                            Foreground="Red" />
                        <Grid
                            x:Name="SGridAxis"
                            DockPanel.Dock="Bottom"
                            Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="1" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1" />
                                <ColumnDefinition Width="40" />
                            </Grid.ColumnDefinitions>
                            <Line Grid.Column="0" Grid.Row="0" Stretch="Fill" Y2="1" Stroke="Black" />
                            <Line Grid.Column="1" Grid.Row="1" Stretch="Fill" X2="1" Stroke="Black" />
                            <TextBlock
                                Grid.Column="1"
                                Grid.Row="0"
                                VerticalAlignment="Top"
                                Margin="2"
                                Text="Z" />
                            <TextBlock
                                x:Name="SSlblAxis"
                                Grid.Column="1"
                                Grid.Row="0"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Right"
                                Margin="2"
                                Text="Y" />
                        </Grid>
                        <DockPanel
                            x:Name="SPlyLinesPanel"
                            Margin="10"
                            LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError), ElementName=SWidthX}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=SLengthY}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=SHeightZ}"
                                                            Value="False" />
                                                <Condition
                                                            Binding="{Binding Path=(Validation.HasError),  ElementName=SQuantity}"
                                                            Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
 
                            <Grid>
                                <Rectangle
                                    Fill="Transparent"
                                    Stroke="Black" />
                            </Grid>
                        </DockPanel>
                    </DockPanel>

                </DockPanel>
            </TabItem.Content>
        </TabItem>
    </TabControl>
</Window>