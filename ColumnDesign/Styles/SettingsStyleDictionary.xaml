<ResourceDictionary
    x:Class="ColumnDesign.Styles.SettingsWindowStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush
        x:Key="TitleBarBackgroundBrush"
        Color="Black" />
    <SolidColorBrush
        x:Key="SettingsWindowBorderBrush"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="SettingsWindowBorderBrushInactive"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="SettingsWindowStatusForeground"
        Color="White" />
    <SolidColorBrush
        x:Key="SettingsWindowStatusForegroundInactive"
        Color="White" />

    <Style
        x:Key="SettingsWindowStyleTitleBarButton"
        TargetType="{x:Type Button}">
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="PART_border"
                                Property="Background"
                                Value="White" />
                            <Setter
                                TargetName="PART_border"
                                Property="Opacity"
                                Value="0.4" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="True">
                            <Setter
                                TargetName="PART_border"
                                Property="Background"
                                Value="{StaticResource SettingsWindowBorderBrush}" />
                            <Setter
                                TargetName="PART_border"
                                Property="Opacity"
                                Value="1" />
                            <Setter
                                Property="Foreground"
                                Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="SettingsWindowStyle"
        TargetType="{x:Type Window}">
        <Setter
            Property="WindowStyle"
            Value="None" />
        <Setter
            Property="AllowsTransparency"
            Value="true" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="ResizeMode"
            Value="CanResize" />
        <Setter
            Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    NonClientFrameEdges="None"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="7"
                    CaptionHeight="32" />
            </Setter.Value>
        </Setter>
        <EventSetter
            Event="Loaded"
            Handler="WindowLoaded" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Window}">
                    <!--
                    7 is a magic number. By default Windows fits a maximized window with Margin
                    7 7 7 5 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                    between maximized window and screen edges; smaller numbers show parts of
                    the window outside of the current monitor on multi-display computers.
                    -->
                    <Border
                        x:Name="PART_Container"
                        Padding="7 7 7 5">
                        <Grid
                            TextOptions.TextRenderingMode="ClearType"
                            TextOptions.TextFormattingMode="Display">
                            <Border
                                x:Name="PART_Border"
                                Width="Auto"
                                Height="Auto"
                                Background="White"
                                BorderBrush="{StaticResource SettingsWindowBorderBrush}"
                                BorderThickness="1"
                                Padding="0">
                                <DockPanel
                                    HorizontalAlignment="Stretch"
                                    Background="Transparent"
                                    VerticalAlignment="Stretch">
                                    <Border
                                        x:Name="TitleBar"
                                        DockPanel.Dock="Top"
                                        Background="{StaticResource TitleBarBackgroundBrush}"
                                        BorderThickness="0">
                                        <Grid
                                            Height="32">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="34" />
                                                <ColumnDefinition />
                                                <ColumnDefinition
                                                    Width="34" />
                                                <ColumnDefinition
                                                    Width="34" />
                                                <ColumnDefinition
                                                    Width="34" />
                                            </Grid.ColumnDefinitions>
                                            <Image
                                                x:Name="Icon"
                                                Grid.Column="0"
                                                Source="{Binding Path=Icon, Mode=OneWay,
                                                RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Center"
                                                Margin="0"
                                                Width="25"
                                                Height="25"
                                                MouseUp="IconMouseUp"
                                                MouseLeftButtonDown="IconMouseLeftButtonDown"
                                                WindowChrome.IsHitTestVisibleInChrome="True" />
                                            <TextBlock
                                                x:Name="Caption"
                                                Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Margin="0"
                                                FontFamily="Open Sans"
                                                Foreground="White"
                                                FontSize="12"
                                                Opacity="1"
                                                Text="{Binding Path=Title, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                            <!-- <Button -->
                                            <!--     x:Name="MinButton" -->
                                            <!--     Grid.Column="2" -->
                                            <!--     VerticalAlignment="Center" -->
                                            <!--     VerticalContentAlignment="Center" -->
                                            <!--     Width="32" -->
                                            <!--     Height="32" -->
                                            <!--     Style="{StaticResource SettingsWindowStyleTitleBarButton}" -->
                                            <!--     Click="MinButtonClick" -->
                                            <!--     WindowChrome.IsHitTestVisibleInChrome="True"> -->
                                            <!--     <Grid MaxHeight="9" MaxWidth="9"> -->
                                            <!--         <Path -->
                                            <!--             Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" -->
                                            <!--             StrokeThickness="1" -->
                                            <!--             Stretch="None" -->
                                            <!--             RenderOptions.EdgeMode="Aliased" -->
                                            <!--             Data="M0,8 H8 M0,7 H8 M0,6 H8" /> -->
                                            <!--     </Grid> -->
                                            <!-- </Button> -->
                                            <!-- <Button -->
                                            <!--     Grid.Column="3" -->
                                            <!--     x:Name="MaxButton" -->
                                            <!--     VerticalAlignment="Center" -->
                                            <!--     VerticalContentAlignment="Center" -->
                                            <!--     Width="32" -->
                                            <!--     Height="32" -->
                                            <!--     Style="{StaticResource SettingsWindowStyleTitleBarButton}" -->
                                            <!--     Click="MaxButtonClick" -->
                                            <!--     WindowChrome.IsHitTestVisibleInChrome="True"> -->
                                            <!--     <Grid MaxHeight="9" MaxWidth="9"> -->
                                            <!--         <Path -->
                                            <!--             x:Name="PART_MaxButton_Path" -->
                                            <!--             Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" -->
                                            <!--             StrokeThickness="1" -->
                                            <!--             Stretch="None" -->
                                            <!--             RenderOptions.EdgeMode="Aliased" -->
                                            <!--             Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8" /> -->
                                            <!--     </Grid> -->
                                            <!-- </Button> -->
                                            <Button
                                                Grid.Column="4"
                                                x:Name="CloseButton"
                                                VerticalAlignment="Center"
                                                VerticalContentAlignment="Center"
                                                Width="32"
                                                Height="32"
                                                Style="{StaticResource SettingsWindowStyleTitleBarButton}"
                                                Click="CloseButtonClick"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Grid
                                                    MaxHeight="9"
                                                    MaxWidth="9">
                                                    <Path
                                                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                        StrokeThickness="1.5"
                                                        Stretch="None"
                                                        Data="M0,0 L8,8 M0,8 L8,0" />
                                                </Grid>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <ContentPresenter />
                                </DockPanel>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- <Trigger Property="WindowState" Value="Maximized"> -->
                        <!--     <Setter TargetName="PART_MaxButton_Path" Property="Data" -->
                        <!--             Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8" /> -->
                        <!-- </Trigger> -->
                        <Trigger
                            Property="WindowState"
                            Value="Normal">
                            <Setter
                                TargetName="PART_Border"
                                Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        Color="Black"
                                        Opacity="0.5"
                                        BlurRadius="7"
                                        ShadowDepth="2"
                                        Direction="315" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger
                            Property="IsActive"
                            Value="False">
                            <Setter
                                TargetName="PART_Border"
                                Property="BorderBrush"
                                Value="{StaticResource SettingsWindowBorderBrushInactive}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style
                TargetType="{x:Type StatusBar}">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource SettingsWindowStatusForeground}" />
                <Setter
                    Property="Background"
                    Value="{StaticResource SettingsWindowBorderBrush}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="False">
                        <Setter
                            Property="Foreground"
                            Value="{StaticResource SettingsWindowStatusForegroundInactive}" />
                        <Setter
                            Property="Background"
                            Value="{StaticResource SettingsWindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
                TargetType="{x:Type ResizeGrip}">
                <Setter
                    Property="WindowChrome.ResizeGripDirection"
                    Value="BottomRight" />
            </Style>
        </Style.Resources>
    </Style>
    <Style
        x:Key="SettingsStyleButton"
        TargetType="{x:Type Button}">
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="Foreground"
            Value="Black" />
        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="FontFamily"
            Value="Open Sans" />
        <Setter
            Property="Margin"
            Value="10, 0,10,0" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            CornerRadius="6"
                            BorderThickness="1"
                            Background="Transparent"
                            BorderBrush="{StaticResource TitleBarBackgroundBrush}" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsPressed"
                            Value="True">
                            <Setter
                                TargetName="PART_border"
                                Property="Background"
                                Value="{StaticResource SettingsWindowBorderBrush}" />
                            <Setter
                                TargetName="PART_border"
                                Property="Opacity"
                                Value="1" />
                            <Setter
                                Property="Foreground"
                                Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="TextBoxInError"
        TargetType="{x:Type TextBox}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Style.Triggers>
            <Trigger
                Property="Validation.HasError"
                Value="true">
                <Setter
                    Property="BorderBrush"
                    Value="Red" />
                <Setter
                    Property="Foreground"
                    Value="Red" />
                <Setter
                    Property="ToolTip"
                    Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        TargetType="{x:Type TextBox}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="Template"
            Value="{DynamicResource TextBoxControlTemplate}" />
    </Style>
    <Style
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="FontSize"
            Value="10" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="Black" />
    </Style>
    <Style
        x:Key="TreeTextBlock"
        TargetType="{x:Type TextBlock}">

        <Setter
            Property="FontSize"
            Value="12" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
        <Setter
            Property="Foreground"
            Value="Black" />
    </Style>
    <Style
        x:Key="TreeLine"
        TargetType="{x:Type Line}">

        <Setter
            Property="Stroke"
            Value="Black" />
        <Setter
            Property="StrokeThickness"
            Value="2" />
        <Setter
            Property="Stretch"
            Value="Fill" />
    </Style>
    <Style
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
    </Style>
    <Style
        TargetType="{x:Type Button}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="5" />
    </Style>
    <ControlTemplate
        x:Key="TabItemControlTemplate"
        TargetType="{x:Type TabItem}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="True">
            <Border
                x:Name="mainBorder"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                Background="{TemplateBinding Background}"
                Margin="0">
                <Border
                    x:Name="innerBorder"
                    BorderBrush="Red"
                    BorderThickness="0,0,0,4"
                    Background="White" />
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                Content="{TemplateBinding Header}"
                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                ContentSource="Header"
                Focusable="False"
                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Background"
                    TargetName="mainBorder">
                    <Setter.Value>
                        <LinearGradientBrush
                            EndPoint="0,1"
                            StartPoint="0,0">
                            <GradientStop
                                Color="#FFECF4FC"
                                Offset="0" />
                            <GradientStop
                                Color="#FFDCECFC"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Background"
                    TargetName="mainBorder">
                    <Setter.Value>
                        <LinearGradientBrush
                            EndPoint="0,1"
                            StartPoint="0,0">
                            <GradientStop
                                Color="#FFECF4FC"
                                Offset="0" />
                            <GradientStop
                                Color="#FFDCECFC"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Background"
                    TargetName="mainBorder">
                    <Setter.Value>
                        <LinearGradientBrush
                            EndPoint="0,1"
                            StartPoint="0,0">
                            <GradientStop
                                Color="#FFECF4FC"
                                Offset="0" />
                            <GradientStop
                                Color="#FFDCECFC"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Background"
                    TargetName="mainBorder">
                    <Setter.Value>
                        <LinearGradientBrush
                            EndPoint="0,1"
                            StartPoint="0,0">
                            <GradientStop
                                Color="#FFECF4FC"
                                Offset="0" />
                            <GradientStop
                                Color="#FFDCECFC"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Opacity"
                    TargetName="contentPresenter"
                    Value="0.56" />
                <Setter
                    Property="Background"
                    TargetName="mainBorder"
                    Value="#FFF0F0F0" />
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Opacity"
                    TargetName="contentPresenter"
                    Value="0.56" />
                <Setter
                    Property="Background"
                    TargetName="mainBorder"
                    Value="#FFF0F0F0" />
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Opacity"
                    TargetName="contentPresenter"
                    Value="0.56" />
                <Setter
                    Property="Background"
                    TargetName="mainBorder"
                    Value="#FFF0F0F0" />
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Opacity"
                    TargetName="contentPresenter"
                    Value="0.56" />
                <Setter
                    Property="Background"
                    TargetName="mainBorder"
                    Value="#FFF0F0F0" />
                <Setter
                    Property="BorderBrush"
                    TargetName="mainBorder"
                    Value="Transparent" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Left" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Panel.ZIndex"
                    Value="1" />
                <Setter
                    Property="Margin"
                    Value="-2,-2,0,-2" />
                <Setter
                    Property="Opacity"
                    TargetName="innerBorder"
                    Value="1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,0,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Bottom" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Panel.ZIndex"
                    Value="1" />
                <Setter
                    Property="Margin"
                    Value="-2,0,-2,-2" />
                <Setter
                    Property="Opacity"
                    TargetName="innerBorder"
                    Value="1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,0,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Right" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Panel.ZIndex"
                    Value="1" />
                <Setter
                    Property="Margin"
                    Value="0,-2,-2,-2" />
                <Setter
                    Property="Opacity"
                    TargetName="innerBorder"
                    Value="1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="0,1,1,1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="false" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,1,0" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                        Value="true" />
                    <Condition
                        Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}"
                        Value="Top" />
                </MultiDataTrigger.Conditions>
                <Setter
                    Property="Panel.ZIndex"
                    Value="1" />
                <Setter
                    Property="Margin"
                    Value="-2,-2,-2,0" />
                <Setter
                    Property="Opacity"
                    TargetName="innerBorder"
                    Value="1" />
                <Setter
                    Property="BorderThickness"
                    TargetName="innerBorder"
                    Value="0,0,0,2" />
                <Setter
                    Property="BorderThickness"
                    TargetName="mainBorder"
                    Value="1,1,1,0" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="CheckBoxControlTemplate"
        TargetType="{x:Type CheckBox}">
        <Grid
            x:Name="templateRoot"
            Background="Transparent"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="checkBoxBorder"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="1"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid
                    x:Name="markGrid">
                    <Path
                        x:Name="optionMark"
                        Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                        Fill="#FF212121"
                        Margin="1"
                        Opacity="0"
                        Stretch="None" />
                    <Rectangle
                        x:Name="indeterminateMark"
                        Fill="#FF212121"
                        Margin="2"
                        Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                Grid.Column="1"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasContent"
                Value="True">
                <Setter
                    Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter
                                Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Margin="14,0,0,0"
                                            SnapsToDevicePixels="True"
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                            StrokeThickness="1"
                                            StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Padding"
                    Value="4,-1,0,0" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="checkBoxBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="checkBoxBorder"
                    Value="Transparent" />

            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Background"
                    TargetName="checkBoxBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="checkBoxBorder"
                    Value="Red" />

            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="checkBoxBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="checkBoxBorder"
                    Value="Transparent" />

            </Trigger>
            <Trigger
                Property="IsChecked"
                Value="True">
                <Setter
                    Property="Opacity"
                    TargetName="optionMark"
                    Value="1" />
                <Setter
                    Property="Opacity"
                    TargetName="indeterminateMark"
                    Value="0" />
            </Trigger>
            <Trigger
                Property="IsChecked"
                Value="{x:Null}">
                <Setter
                    Property="Opacity"
                    TargetName="optionMark"
                    Value="0" />
                <Setter
                    Property="Opacity"
                    TargetName="indeterminateMark"
                    Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="TextBoxControlTemplate"
        TargetType="{x:Type TextBox}">
        <Border
            x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <ScrollViewer
                x:Name="PART_ContentHost"
                Focusable="False"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Opacity"
                    TargetName="border"
                    Value="0.56" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        TargetType="{x:Type RadioButton}">
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="BorderBrush"
            Value="Black" />
    </Style>
    <ControlTemplate
        x:Key="RadioButtonControlTemplate"
        TargetType="{x:Type RadioButton}">
        <Grid
            x:Name="templateRoot"
            Background="Transparent"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="radioButtonBorder"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="100"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="1,1,2,1"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid
                    x:Name="markGrid"
                    Margin="2">
                    <Ellipse
                        x:Name="optionMark"
                        Fill="Red"
                        MinWidth="6"
                        MinHeight="6"
                        Opacity="0" />
                </Grid>
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                Grid.Column="1"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasContent"
                Value="True">
                <Setter
                    Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter
                                Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Margin="14,0,0,0"
                                            SnapsToDevicePixels="True"
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                            StrokeThickness="1"
                                            StrokeDashArray="1 2" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Padding"
                    Value="4,-1,0,0" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="radioButtonBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="radioButtonBorder"
                    Value="Black" />
                <Setter
                    Property="Fill"
                    TargetName="optionMark"
                    Value="Red" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Background"
                    TargetName="radioButtonBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="radioButtonBorder"
                    Value="Gray" />
                <Setter
                    Property="Foreground"
                    Value="Gray" />
                <Setter
                    Property="Fill"
                    TargetName="optionMark"
                    Value="Gray" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    TargetName="radioButtonBorder"
                    Value="White" />
                <Setter
                    Property="BorderBrush"
                    TargetName="radioButtonBorder"
                    Value="Black" />
                <Setter
                    Property="Fill"
                    TargetName="optionMark"
                    Value="Red" />
            </Trigger>
            <Trigger
                Property="IsChecked"
                Value="True">
                <Setter
                    Property="Opacity"
                    TargetName="optionMark"
                    Value="1" />
            </Trigger>
            <Trigger
                Property="IsChecked"
                Value="{x:Null}">
                <Setter
                    Property="Opacity"
                    TargetName="optionMark"
                    Value="0.56" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="ButtonControlTemplate"
        TargetType="{x:Type Button}">
        <Border
            x:Name="border"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>
</ResourceDictionary>